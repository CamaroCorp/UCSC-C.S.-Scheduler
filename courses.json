{"CSE 3": {"full_name": "CSE 3 Personal Computer Concepts: Software and Hardware", "credits": 5, "description": "Provides an introduction to computers. Personal computing is emphasized, and students are introduced to word processing, spreadsheets, database management, graphics, and programming. Covers fundamentals of computing and current and future uses of computer technology, PC hardware, Windows operating system, applications software, networking and the Internet, and developments in the computer industry.  Designed for students with little or no experience using computers. Students cannot receive credit for this course and Computer Science 2. (Formerly Computer Engineering 3.)"}, "CSE 5J": {"full_name": "CSE 5J Introduction to Programming in Java", "credits": 5, "description": "Introduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and CSE 5C and CSE 5P cover similar concepts, but use different programming languages. Because CSE 5J followed by CSE 11 is a two-quarter alternative to the accelerated course CSE 12A and CSE 12L, engineering majors and students planning on continuing the programming sequence are encouraged to take CSE 5J rather than CSE 5C or CSE 5P. Students may not receive credit for CSE 5J taken concurrently or subsequently to CSE 12A, CSE 12B, or Computer Engineering 13. (Formerly CMPS 5J.)"}, "CSE 10": {"full_name": "CSE 10 Introduction to Computer Science", "credits": 5, "description": "An overview of the theory, foundations, and practice of computer science with emphasis on what computers can and cannot do, now and in the future. Topics include algorithms and data, correctness and efficiency of algorithms, hardware, programming languages, limitations of computation, applications, and social issues. No programming skills are required as a prerequisite. Major concepts and open problems in computer science are presented without reliance on sophisticated mathematical tools. Students cannot receive credit for this course after completing CSE 15. (Formerly CMPS 10.)"}, "CSE 12": {"full_name": "CSE 12 Computer Systems and Assembly Language", "credits": 5, "description": "Introduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of system software, and computer architecture. May include C language. Students with no prior programming experience are strongly recommended to take CSE 3, Computer Science 5J, Computer Science 5P, Computer Science 10, or equivalent before taking this course. (Formerly Computer Engineering 12.)"}, "CSE 12L": {"full_name": "CSE 12L Computer Systems and Assembly Language Laboratory", "credits": 2, "description": "Introduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of system software, and computer architecture. May include C language. Students with no prior programming experience are strongly recommended to take CSE 3, Computer Science 5J, Computer Science 5P, Computer Science 10, or equivalent before taking this course. (Formerly Computer Engineering 12L.)"}, "CSE 13E": {"full_name": "CSE 13E Embedded Systems and C Programming", "credits": 7, "description": "Introduction to the C programming language as a means for controlling embedded computing systems. Continuing the exploration begun in course 12, students move to higher levels of abstraction in the control of complex computer systems. Students cannot receive credit for both CSE 13E and CSE 13S. Course is 7 credits with integrated laboratory. (Formerly Computer Engineering 13, Computer Systems and C Programming, and Computer Engineering 13L, Computer Systems and C Programming Lab.)"}, "CSE 13S": {"full_name": "CSE 13S Computer Systems and C Programming", "credits": 7, "description": "Focuses on C programming, command line, shell programming, editors, debuggers, source code control, and other tools. Examines basic computer systems, algorithm design, and development, data types, and program structures. Develops understanding of process model, compile-link-execute build cycle, language-machine interface, memory, and data representation. Students cannot receive credit for both CSE 13S and CSE 13E. Course is 7 credits with integrated laboratory."}, "CSE 16": {"full_name": "CSE 16 Applied Discrete Mathematics", "credits": 5, "description": "Introduction to applications of discrete mathematical systems. Topics include sets, functions, relations, graphs, predicate calculus, mathematical proof methods (induction, contraposition, contradiction), counting methods (permutations, combinations), and recurrences. Examples are drawn from computer science and computer engineering. Knowledge of computer programming is useful before taking this course. Students who do not have prior programing experience are strongly recommended to take Computer Science 5C, 5J, or 5P before taking this course. (Formerly Computer Engineering 16.)"}, "CSE 20": {"full_name": "CSE 20 Beginning Programming in Python", "credits": 5, "description": "Provides students with Python programming skills and the ability to design programs and read Python code. Topics include data types, control flow, methods and advanced functions, built-in data structures, and introduction to OOP. No prior programming experience is required. Students may not receive credit for CSE 20 after receiving credit for CSE 30. (Formerly CMPS 5P, Introduction to Programming in Python.)"}, "CSE 30": {"full_name": "CSE 30 Programming Abstractions: Python", "credits": 7, "description": "Introduction to software development in Python focusing on structuring software in terms of objects endowed with primitive operations. Introduces concepts and techniques via a sequence of concrete case studies. Coursework consists of programming assignments and a final examination. Note that CSE 30 assumes some Python experience, students trained in a different language should self-study Python to prepare for CSE 30. See CSE Testout Exam for resources and further information."}, "CSE 50": {"full_name": "CSE 50 Business Information Systems", "credits": 5, "description": "Addresses the use of information systems (IS) within a business enterprise. Subjects include computer hardware and software concepts, system design and implementation, telecommunications, data management, transaction-based systems, management information systems, and the use of IS to compete. Intended for technology and information management and business management economics majors. (Formerly TIM 50.)"}, "CSE 58": {"full_name": "CSE 58 Systems Analysis and Design", "credits": 5, "description": "Students learn how information technology is used to deal with business requirements and/or solve business problems. Provides an understanding of structured computer systems analysis and design methodologies and techniques and their application to business information systems. Intended for technology and information management and business management economics majors. (Formerly TIM 58.)"}, "CSE 80A": {"full_name": "CSE 80A Universal Access: Disability, Technology, and Society", "credits": 5, "description": "Overview of human-centered technology and of its potential for increasing the quality of life and independence of disabled individuals. A substantial portion of the course is devoted to studying physical, psychological, and psychosocial aspects of disability. Topics include: diversity and integration, legislation, accessibility, and universal design. (Formerly Computer Engineering 80A.)"}, "CSE 80C": {"full_name": "CSE 80C Starting a New Technology Company", "credits": 5, "description": "Focuses on the creation and management of technology start-ups and small companies, using case studies and team projects as the basis for learning and applying the course materials. (Formerly TIM 80C.)"}, "CSE 80L": {"full_name": "CSE 80L Social Data Analytics and Visualization", "credits": 5, "description": "Course examines: social data analytics--veracity, consistency, uncertainty, volume; statistical computation--misuse, bias, dispersion, correlation, regressions, differential scales, normal distributions, factor and cluster analysis, extrapolation, inference, simple programming; visual representations--communication, critique and design of infographics; applications--environment, energy, economics, education, empowerment. (Formerly Computer Science 80L.)"}, "CSE 80N": {"full_name": "CSE 80N Introduction to Networking and the Internet", "credits": 5, "description": "Introduction to the evolution, technological basis, and services of the Internet, with descriptions of its underlying communications structure, routing algorithms, peer-to-peer hierarchy, reliability, and packet switching. Network security, mail, multimedia and data compression issues, HTML, and digital images. Students who have completed CSE 150 cannot receive credit for this course. (Formerly Computer Engineering 80N.)"}, "CSE 80S": {"full_name": "CSE 80S Social Networks", "credits": 5, "description": "Introduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. (Formerly Computer Science 17.)"}, "CSE 94": {"full_name": "CSE 94 Group Tutorial", "credits": 5, "description": "Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency."}, "CSE 94F": {"full_name": "CSE 94F Group Tutorial", "credits": 2, "description": "Provides a means for a small group  of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency."}, "CSE 99": {"full_name": "CSE 99 Tutorial", "credits": 5, "description": "Students submit petition to sponsoring agency."}, "CSE 99F": {"full_name": "CSE 99F Tutorial", "credits": 2, "description": "Students submit petition to sponsoring agency."}, "CSE 100": {"full_name": "CSE 100 Logic Design", "credits": 5, "description": "Boolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout. (Formerly Computer Engineering 100.)"}, "CSE 100L": {"full_name": "CSE 100L Logic Design Laboratory", "credits": 2, "description": "Laboratory sequence illustrating topics covered in course 100. Two 2-hour laboratory sessions per week. Weekly laboratory assignments which require the use of the oscilloscopes, TTL circuits, computer-aided design and simulation tools, and programmable logic. Students are billed a materials fee. (Formerly Computer Engineering 100L.)"}, "CSE 101": {"full_name": "CSE 101 Introduction to Data Structures and Algorithms", "credits": 5, "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)"}, "CSE 102": {"full_name": "CSE 102 Introduction to Analysis of Algorithms", "credits": 5, "description": "Methods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. (Formerly Computer  Science 102.)"}, "CSE 103": {"full_name": "CSE 103 Computational Models", "credits": 5, "description": "Various representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. (Formerly CMPS 130.)"}, "CSE 104": {"full_name": "CSE 104 Computability and Computational Complexity", "credits": 5, "description": "Turing machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. (Formerly CMPS 132.)"}, "CSE 104W": {"full_name": "CSE 104W Computability and Computational Complexity", "credits": 2, "description": "Disciplinary Communication (DC) course to be taken concurrently with course 132. Students satisfy the DC requirement by writing a survey paper on a topic related to computability and computational complexity. Possible topics include: an overview of a different model of computation (e.g., quantum computing); an overview of a major complexity class; a critical analysis of the Church-Turing thesis. Prerequisite(s): CSE 130; satisfaction of the Entry Level Writing and Composition requirements.Concurrent enrollment in CSE 132 required. Enrollment by permission of instructor.(Formerly CMPS 132W.)"}, "CSE 106": {"full_name": "CSE 106 Applied Graph Theory and Algorithms", "credits": 5, "description": "Basic concepts and algorithms are reviewed including trees, Eulerian and Hamiltonian graphs, and graph transversal. Algorithms are explored to solve problems in connectivity, routing, matching, and embedding of graphs. Graph theory and algorithms are developed around applications in computer engineering. (Formerly Computer Engineering 177.)"}, "CSE 107": {"full_name": "CSE 107 Probability and Statistics for Engineers", "credits": 5, "description": "Introduction to fundamental tools of stochastic analysis. Probability, conditional probability; Bayes Theorem; random variables and transforms; independence; Bernnoulli trials. Statistics, inference from limited data; outcomes of repeated experiments; applications to design; assessment of relative frequency and probability; law of large numbers; precision of measurements. Elements of stochastic processes, Poisson processes; Markov chains. Students cannot receive credit for this course and Applied Mathematics and Statistics 131. (Formerly Computer Engineering 107.)"}, "CSE 108": {"full_name": "CSE 108 Algorithmic Foundations of Cryptography", "credits": 5, "description": "Focuses on some of the foundational aspects of modern cryptography, namely, private and public key cryptography, digital signatures, pseudorandom generators and functions, message authentication codes, hash functions, and random oracles. Course also connects the formal concepts with some real-world applications, like RA, SSL, and bitcoin, exposing students to general concepts of probability theory, number theory, and rigorous proofs. (Formerly Computer Science 118.)"}, "CSE 110A": {"full_name": "CSE 110A Fundamentals of Compiler Design I", "credits": 5, "description": "An introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. (Formerly Computer  Science 104A.)"}, "CSE 110B": {"full_name": "CSE 110B Fundamentals of Compiler Design II", "credits": 5, "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and CSE 211. Taught in conjunction with CSE 211. (Formerly Computer Science 104B.)"}, "CSE 111": {"full_name": "CSE 111 Advanced Programming", "credits": 5, "description": "An introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications. (Formerly Computer Science 109.)"}, "CSE 112": {"full_name": "CSE 112 Comparative Programming Languages", "credits": 5, "description": "Covers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. (Formerly Computer Science 112.)"}, "CSE 113": {"full_name": "CSE 113 Parallel and Concurrent Programming", "credits": 5, "description": "Introduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms. (Formerly Computer Engineering 113 and Computer Science 113.)"}, "CSE 114": {"full_name": "CSE 114 Functional Programming", "credits": 5, "description": "An in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. (Formerly CMPS 153.)"}, "CSE 115A": {"full_name": "CSE 115A Introduction to Software Engineering", "credits": 5, "description": "Emphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Computer Science 115.)"}, "CSE 115B": {"full_name": "CSE 115B Software Design Project", "credits": 5, "description": "Students in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. (Formerly Computer Science 116.)"}, "CSE 115C": {"full_name": "CSE 115C Software Design Project II", "credits": 5, "description": "Continuation of CSE 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. (Formerly Computer Science 117.)"}, "CSE 115D": {"full_name": "CSE 115D Software Design Project - Accelerated", "credits": 5, "description": "Accelerated version of CSE 115B and CSE 115C. Students work in teams to develop, test, document and deploy a substantial software project. Each team gives a formal presentation and demonstration of their project. Students cannot receive credit for both CSE 115D and any part of the 115B-115C sequence."}, "CSE 116": {"full_name": "CSE 116 Introduction to Functional Programming", "credits": 5, "description": "Problem solving emphasizing recursion, data abstraction, and higher-order functions. Introduction to types and type checking, modular programming, and reasoning about program correctness."}, "CSE 117": {"full_name": "CSE 117 Open Source Programming", "credits": 5, "description": "Presents an opportunity to participate in Linux Kernel development--one of the preeminent open source projects. Through community involvement, students accelerate comprehension of computer science fundamentals and display their understanding and experience relevant to other programming projects. (Formerly Computer Science 107.)"}, "CSE 118": {"full_name": "CSE 118 Mobile Applications", "credits": 5, "description": "Introduces programming and application development for mobile devices. Covers the SDK and main programming platforms available on mobile devices, methodologies for developing native applications, division of computation between the mobile platform and servers, and mobile-to-server communications. Introduces platforms based on JavaScript and HTML5 for the development of applications that are portable across platforms. Students develop components of applications, leading to fully functional applications by the end of the course. Course based on emulators and SDK tools, so ownership of a cellphone/tablet is not required for the course. (Formerly CMPS 121.)"}, "CSE 119": {"full_name": "CSE 119 Software for Society", "credits": 5, "description": "Provides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. (Formerly Computer Science 119.)"}, "CSE 120": {"full_name": "CSE 120 Computer Architecture", "credits": 5, "description": "Introduction to computer architecture including examples of current approaches and the effect of technology and software. Computer performance evaluation, basic combinatorial and sequential digital components, different instruction set architectures with a focus on the MIPS ISA and RISC paradigm. Evolution of CPU microarchitecture from single-cycle to multi-cycle pipelines, with overview of super-scalar, multiple-issue and VLIW. Memory system, cache, virtual memory and relationship between memory and performance. Evolution of PC system architecture. May include advanced topics, such as parallel processing, MIMD, and SIMD. (Formerly Computer Engineering 110.)"}, "CSE 121": {"full_name": "CSE 121 Microprocessor System Design", "credits": 5, "description": "The design and use of microprocessor-based systems. Covers microprocessor and microcontroller architecture, programming techniques, bus and memory organization, DMA, timing issues, interrupts, peripheral devices, serial and parallel communication, and interfacing to analog and digital systems. (Formerly Computer Engineering 121.)"}, "CSE 121L": {"full_name": "CSE 121L Microprocessor System Design Laboratory", "credits": 2, "description": "Laboratory sequence illustrating topics covered in CSE 121. Two 2-hour laboratory sessions per week. Students design, build, program, debug, document, and demonstrate a microprocessor-based system. Students are billed a materials fee. (Formerly Computer Engineering 121L.)"}, "CSE 122": {"full_name": "CSE 122 Introduction to VLSI Digital System Design", "credits": 5, "description": "Introduces very large scale integrated (VLSI) custom integrated circuits. Topics include: semiconductor manufacturing, logic families, field-effect transistors (FETs), interconnect models, simulation, and circuits. Introduces the design flow from logic design to layout with a focus on high performance and low power. Students cannot receive credit for this course and CSE 222A. (Formerly Computer Engineering 122.)"}, "CSE 123A": {"full_name": "CSE 123A Engineering Design Project I", "credits": 5, "description": "First of a two-course sequence that is the culmination of the engineering program. Students apply knowledge and skills gained in elective track to complete a major design project. Students complete research, specification, planning, and procurement for a substantial project. Includes technical discussions, design reviews, and formal presentations; engineering design cycle, engineering teams, and professional practices. Formal technical specification of the approved project is presented to faculty. Students are billed a materials fee.  (Formerly Computer Engineering 123A.)"}, "CSE 123B": {"full_name": "CSE 123B Engineering Design Project II", "credits": 7, "description": "Second of two-course sequence in engineering system design. Students fully implement and test system designed and specified in CSE 123A. Formal written report, oral presentation, and demonstration of successful project to review panel of engineering faculty required. Students are billed a materials fee. (Formerly Computer Engineering 123B.)"}, "CSE 125": {"full_name": "CSE 125 Logic Design with Verilog", "credits": 5, "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. (Formerly Computer Engineering 125.)"}, "CSE 125L": {"full_name": "CSE 125L Logic Design with Verilog Laboratory", "credits": 2, "description": "Laboratory sequence illustrating topics covered in course 125. Two 2-hour laboratory sessions per week. Students are billed a materials fee. (Formerly Computer Engineering 125L.)"}, "CSE 129A": {"full_name": "CSE 129A Capstone Project I", "credits": 2, "description": "First of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this first course, students complete the specification and planning for a substantial project. Topics covered: engineering design cycle, engineering teams, and professional practices. (Formerly Computer Engineering 129A.)"}, "CSE 129B": {"full_name": "CSE 129B Capstone Project II", "credits": 5, "description": "Second of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this second course, students complete the research and procurement for a substantial project and a preliminary implementation. Students are billed a materials fee. Prerequisite(s): CSE 121, CSE 121L, and CSE 129A. Previous or concurrent enrollment in CSE 185. Enrollment by permission of instructor. (Formerly Computer Engineering 129B.)"}, "CSE 129C": {"full_name": "CSE 129C Capstone Project III", "credits": 5, "description": "Third of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this third course, students work in teams to complete the project specified and advanced in the first two courses. A formal written report, oral presentation, and demonstration of the successful project to a review panel of engineering faculty is required. Students are billed a materials fee. Prerequisite(s): CSE 129B and CSE 185. Enrollment by permission of instructor. (Formerly Computer Engineering 129C.)"}, "CSE 130": {"full_name": "CSE 130 Principles of Computer Systems Design", "credits": 5, "description": "Covers the principles governing computer-systems design and complexity; familiarity with memory, storage, and networking; concurrency and synchronization; layering (abstraction and modularity); naming; client-server and virtualized system models; and performance. Requires significant programming projects demonstrating mastery of these concepts. (Formerly Computer Engineering 105.)"}, "CSE 131": {"full_name": "CSE 131 Introduction to Operating Systems", "credits": 5, "description": "Fundamental principles of operating systems: process synchronization, deadlocks, memory management, resource allocation, scheduling, storage systems, and study of several operating systems. A major programming project will be required. (Formerly Computer Science 111.)"}, "CSE 132": {"full_name": "CSE 132 Computer Security", "credits": 5, "description": "Introduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. (Formerly CMPS 122.)"}, "CSE 134": {"full_name": "CSE 134 Embedded Operating Systems", "credits": 5, "description": "Detailed exploration of the internal design of an embedded operating systems kernel. Covers kernel structure and organization, device drivers, I/O systems, file systems, memory management, and security. Students complete significant programming projects that extend or modify existing operating systems. (Formerly Computer Engineering 114.)"}, "CSE 138": {"full_name": "CSE 138 Distributed Systems", "credits": 5, "description": "Covers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. (Formerly CMPS 128, Distributed Systems: File Sharing, Online Gaming, and More.)"}, "CSE 140": {"full_name": "CSE 140 Artificial Intelligence", "credits": 5, "description": "Introduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments. (Formerly CMPS 140.)"}, "CSE 142": {"full_name": "CSE 142 Machine Learning", "credits": 5, "description": "Introduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques. (Formerly CMPS 142.)"}, "CSE 143": {"full_name": "CSE 143 Introduction to Natural Language Processing", "credits": 5, "description": "Introduces the theory and practice of natural language processing (NLP)--the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the  explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. (Formerly CMPS 143.)"}, "CSE 144": {"full_name": "CSE 144 Applied Machine Learning", "credits": 5, "description": "Provides a practical and project-oriented introduction to machine learning, with an emphasis on neural networks and deep learning. Starts with a discussion of the foundational pieces of statistical inference, then introduces the basic elements of machine learning: loss functions and gradient descent. Using these, presents logistic regression, or one-layer networks, and then moves on to more complex models: deep neural networks, convolutional networks for image recognition, and recurrent networks and LSTM for temporal and sequence data. Also covers the basics of dataset preparation and visualization and the performance characterization of the models created. Includes weekly homework and a final project that can be done in groups. (Formerly CMPS 144.)"}, "CSE 145": {"full_name": "CSE 145 Introduction to Data Mining", "credits": 5, "description": "Covers the techniques, algorithms, and applications of data mining, including data preprocessing, data exploration, classification, clustering, mining text, and sequential and social data. (Formerly TIM 145.)"}, "CSE 146": {"full_name": "CSE 146 Ethics and Algorithms", "credits": 5, "description": "Provides an introduction to data-driven and algorithmic decision making, and ethical frameworks for evaluating automated systems. Emphasis on algorithmic literacy, critical analysis, and fundamental limitations of automated decision making. Covers concepts including predictive and causal modeling. Discusses bias, fairness, interpretability, privacy, and accountability. Finally, discusses notions of autonomy and algorithmic auditing."}, "CSE 150": {"full_name": "CSE 150 Introduction to Computer Networks", "credits": 5, "description": "Addresses issues arising in organizing communications among autonomous computers. Network models and conceptual layers; Internet-working; characteristics of transmission media; switching techniques (packet switching, circuit switching, cell switching); medium access control (MAC) protocols and local area networks; error-control strategies and link-level protocols; routing algorithms for bridges and routers; congestion control mechanisms; transport protocols; application of concepts to practical wireless and wireline networks and standard protocol architectures. Students who have completed CSE 80N can take this course for credit. (Formerly CMPE 150.)"}, "CSE 150L": {"full_name": "CSE 150L Introduction to Computer Networks Laboratory", "credits": 2, "description": "Illustrates the concepts covered in CSE 150 and provides students with hands-on experience in computer networks. Students are billed a materials fee. (Formerly CMPE 150L.)"}, "CSE 151": {"full_name": "CSE 151 Advanced Computer Networks", "credits": 5, "description": "Provides an in-depth coverage of fundamental topics introduced in course 150 including routing, transport, and internetworking. Also introduces advanced concepts not covered in CSE 150 including wireless, application-layer services, security, etc. (Formerly  Computer Engineering 151.)"}, "CSE 151L": {"full_name": "CSE 151L Advanced Computer Networks Laboratory", "credits": 2, "description": "Laboratory illustrating the concepts covered in CSE 151: provides students with hands-on experience in computer networks. (Formerly Computer Engineering 151L.)"}, "CSE 152": {"full_name": "CSE 152 Principles of Computer Communication", "credits": 5, "description": "Course focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 250B."}, "CSE 156": {"full_name": "CSE 156 Network Programming", "credits": 5, "description": "Methods and tools used for network programming. Topics include: operating system (OS) support for network protocols; inter-process communication (IPC) facilities, such as pipes, sockets, and remote procedure call (RPC); design of client and server sides of network applications; network security; and programming projects. (Formerly Computer Engineering 156.)"}, "CSE 156L": {"full_name": "CSE 156L Network Programming Laboratory", "credits": 2, "description": "Laboratory sequence illustrating concepts taught in CSE 156. Students learn use of network programming tools and methods via programming exercises. (Formerly Computer Engineering 156L.)"}, "CSE 157": {"full_name": "CSE 157 Internet of Things", "credits": 7, "description": "Introduces the key concepts and techniques in the design of Internet of Things (IoT). Topics include dominant architectures and protocols for IoT, wireless infrastructure for IoT, hardware and software development methodologies, embedded software design for IoT, cloud software for IoT, and network and system security. Students work in teams on a project to design, prototype, and test a complete IoT system. Students are billed a materials fee."}, "CSE 160": {"full_name": "CSE 160 Introduction to Computer Graphics", "credits": 5, "description": "Introduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course and course 260 in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. (Formerly Computer Science 160.)"}, "CSE 160L": {"full_name": "CSE 160L Introduction to Computer Graphics Laboratory", "credits": 2, "description": "Complements CSE 160, gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. (Formerly CMPS 160L.)"}, "CSE 161": {"full_name": "CSE 161 Introduction to Data Visualization", "credits": 5, "description": "Concepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 161.)"}, "CSE 161L": {"full_name": "CSE 161L Data Visualization Laboratory", "credits": 2, "description": "Complements CSE 161. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview,  Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. (Formerly CMPS 161L.)"}, "CSE 162": {"full_name": "CSE 162 Advanced Computer Graphics and Animation", "credits": 5, "description": "Covers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 162.)"}, "CSE 162L": {"full_name": "CSE 162L Advanced Computer Graphics and Animation Laboratory", "credits": 2, "description": "Complements CSE 162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. (Formerly CMPS 162L.)"}, "CSE 163": {"full_name": "CSE 163 Data Programming for Visualization", "credits": 5, "description": "Presents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. (Formerly CMPS 165.)"}, "CSE 165": {"full_name": "CSE 165 Human-Computer Interaction", "credits": 5, "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Interdisciplinary course for social science and engineering majors. Students cannot receive credit for this course and CSE 265 or DANM 231. (Formerly Computer Engineering 131.)"}, "CSE 167": {"full_name": "CSE 167 Mobile Sensing and Interaction", "credits": 5, "description": "Provides hands-on knowledge and experience with modern mobile computing platforms for sensing and interactions tasks. Students learn how to create usable applications on a sensor-laden, mobile computing platform with adequate level of user interface. (Formerly Computer Engineering 161.)"}, "CSE 168": {"full_name": "CSE 168 Introduction to Augmented Reality and Virtual Reality", "credits": 7, "description": "Covers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation. Prerequisite(s): CSE 160 and CSE 160L. Some knowledge of mobile platforms (e.g., CSE 118 or CSE 167) is helpful, but not required. Enrollment is by instructor permission. Enrollment is restricted to juniors and seniors. (Formerly CMPS 168.)"}, "CSE 170": {"full_name": "CSE 170 Management of Technology Seminar", "credits": 2, "description": "Uses weekly talks by leading industry practitioners and university researchers to provide in-depth exposure to the management of technology. Topics covered include product development, operations, strategy, finance, and marketing for technologies such as software and information systems. (Formerly TIM 101.)"}, "CSE 171A": {"full_name": "CSE 171A Introduction to Management of Technology I", "credits": 5, "description": "An in-depth examination of technological, strategic, marketing, and financial methods and analytical tools for the management of technology to enable cost-effective and rapid development of profitable and high quality technologies. Includes case studies and a comprehensive project.  (Formerly TIM 105.)"}, "CSE 171B": {"full_name": "CSE 171B Introduction to Management of Technology II", "credits": 5, "description": "High-technology enterprises must understand and operate effectively within their technology-business value chains in order to maximize profitability. This course develops and applies methods and tools for the design, optimization, selection, and management of these value chain networks. (Formerly TIM 125.)"}, "CSE 173": {"full_name": "CSE 173 Financial Engineering and Management in High Technology Firms", "credits": 5, "description": "Addresses methods and tools for financing technology development and projects. Includes approaches for coordinating finance and accounting with strategy and operations of firms; discounted cash-flow analysis; activity-based costing; financial planning; and elements of financial account and investment science. (Formerly TIM 130.)"}, "CSE 174": {"full_name": "CSE 174 Decision Analysis in Management", "credits": 5, "description": "Presents decision tools/theory with a focus on investment, finance, management, technology, and policy. Often, irreversible decisions are made without enough information to analyze the possible consequences. Course uses systematic approaches to analyze these types of situations to enable rational decisions. (Formerly TIM 165.)"}, "CSE 175": {"full_name": "CSE 175 Business Strategy and Information Systems", "credits": 5, "description": "Analysis of effective use of information systems within a business enterprise, with emphasis on gaining a competitive advantage. Integration of information systems with business strategy, financial justification, personnel, and organizational considerations are highlighted. Intended for technology and information management majors or senior engineering majors who have a business interest. (Formerly TIM 158.)"}, "CSE 180": {"full_name": "CSE 180 Database Systems I", "credits": 5, "description": "Introduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Students that have taken and passed CSE 182 may not take CSE 180 for credit. (Formerly CMPS 180.)"}, "CSE 180W": {"full_name": "CSE 180W Database Systems", "credits": 2, "description": "Disciplinary Communication (DC) course to be taken concurrently with course 180. Students satisfy the DC requirement by producing a database design document, a document with comments on the source code for complex queries, and a literature survey or systems survey. (Formerly CMPS 180W.)"}, "CSE 181": {"full_name": "CSE 181 Database Systems II", "credits": 5, "description": "Introduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management. (Formerly CMPS 181.)"}, "CSE 182": {"full_name": "CSE 182 Introduction to Database Management Systems", "credits": 5, "description": "Concepts, approaches, tools, and methodology of database design. Topics include the entity-relationship model; the relational data model; normal forms; commercial languages such as SQL (SQL constraints, SQL triggers, and update languages); query-by-example (QBE); XML data model, and XML query language (XQuery); as well as relational database-management support for XML and object-relational features in database-management systems. Involves a database -application development project. Students that have taken and passed CSE 180 cannot receive credit for CSE 182 (Formerly CMPS 182)."}, "CSE 183": {"full_name": "CSE 183 Web Applications", "credits": 5, "description": "The World-Wde Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications.  Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects.(Formerly CMPS 183.)"}, "CSE 184": {"full_name": "CSE 184 Data Wrangling and Web Scraping", "credits": 5, "description": "Python basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. (Formerly CMPS 184.)"}, "CSE 185E": {"full_name": "CSE 185E Technical Writing for Computer Science and Engineering", "credits": 5, "description": "Writing by engineers and computer scientists to technical audiences. Writing exercises include: cover letter and resume for job application, tutorial writing, grant proposal, document specification, literature review, and a final technical report. Two oral presentations are also required, an in-class presentation and a poster presentation. Students also receive instruction in the use of UC library and journal database resources, and in the writing of a statement of purpose for graduate school application. Also offered as CSE 185S. (Formerly Computer Engineering 185, Technical Writing for Computer Engineers.)"}, "CSE 191": {"full_name": "CSE 191 Computer Science and Technology Seminar", "credits": 2, "description": "Weekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. (Formerly CMPS 191.)"}, "CSE 192": {"full_name": "CSE 192 Supervised Student Teaching/Tutoring", "credits": 5, "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192.)"}, "CSE 192F": {"full_name": "CSE 192F Supervised Student Teaching/Tutoring", "credits": 2, "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192F.)"}, "CSE 193": {"full_name": "CSE 193 Field Study", "credits": 5, "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency."}, "CSE 193F": {"full_name": "CSE 193F Field Study", "credits": 2, "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency."}, "CSE 194": {"full_name": "CSE 194 Group Tutorial", "credits": 5, "description": "A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency."}, "CSE 194F": {"full_name": "CSE 194F Group Tutorial", "credits": 2, "description": "A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency."}, "CSE 195": {"full_name": "CSE 195 Senior Thesis Research", "credits": 5, "description": "Students submit petition to sponsoring agency. Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements. Computer Engineering majors, CSE 123A or CSE 129A."}, "CSE 195F": {"full_name": "CSE 195F Senior Thesis Research", "credits": 2, "description": "Students submit petition to sponsoring agency. Consent of instructor required. Prerequisite: CSE 123A."}, "CSE 198": {"full_name": "CSE 198 Individual Study or Research", "credits": 5, "description": "Students submit petition to sponsoring agency."}, "CSE 198F": {"full_name": "CSE 198F Individual Study or Research", "credits": 2, "description": "Students submit petition to sponsoring agency."}, "CSE 199": {"full_name": "CSE 199 Tutorial", "credits": 5, "description": "For fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency."}, "CSE 199F": {"full_name": "CSE 199F Tutorial", "credits": 2, "description": "For fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency."}, "CSE 200": {"full_name": "CSE 200 Research and Teaching in Computer Science and Engineering", "credits": 3, "description": "Basic teaching techniques for teaching assistants, including responsibilities and rights of teaching assistants, resource materials, computer security, leading discussion or lab sessions, presentation techniques, maintaining class records, electronic handling of homework, and grading. The course examines research and professional training, including use of the library and online databases, technical typesetting, writing journal and conference papers, publishing in computer science and computer engineering, giving talks in seminars and conferences, and ethical issues in science and engineering. Required for all teaching assistants. Formerly CMPS 200 and CMPE 200.)"}, "CSE 201": {"full_name": "CSE 201 Analysis of Algorithms", "credits": 5, "description": "Rigorous analysis of the time and space requirements of important algorithms, including worst case, average case, and amortized analysis. Techniques include order-notation, recurrence relations, information-theoretic lower bounds, adversary arguments. Analysis of the key data structures: trees, hash tables, balanced tree schemes, priority queues, Fibonacci and binomial heaps. Algorithmic paradigms such as divide and conquer, dynamic programming, union-find with path compression, augmenting paths. Selected advanced algorithms. Introduction to NP-completeness. (Formerly Computer Science 201.)"}, "CSE 202": {"full_name": "CSE 202 Combinatorial Algorithms", "credits": 5, "description": "Fundamental combinatorial algorithms, graph algorithms, flow problems, matching problems, linear programming, integer programming, NP-completeness, approximation algorithms for optimization problems. (Formerly Computer Science 211.)"}, "CSE 204": {"full_name": "CSE 204 Computational Models and Complexity", "credits": 5, "description": "Finite automata and regular expressions, universal models of computation, computability and unsolvability, relations between complexity classes, hierarchy theorems, reductions, complete problems for the major complexity classes (L, NL,  P, NP, PSPACE). Other topics may include complexity of counting and enumeration problems, complexity of approximation, randomized complexity classes. (Formerly Computer Science 210.)"}, "CSE 205": {"full_name": "CSE 205 Logic in Computer Science", "credits": 5, "description": "The applications and uses of formal systems to computer science. Covers the syntax and semantics of propositional logic and first-order logic, normal forms, soundness and completeness theorems, Herbrand's theorem, unification and resolution, foundations of logic programming, automated theorem proving. Other topics may include deductive databases, database query languages, nonmonotonic reasoning. (Formerly Computer Science 217.)"}, "CSE 207": {"full_name": "CSE 207 Graph Algorithms", "credits": 5, "description": "Explores graph theory and algorithms for solving problems in engineering. A review of basic graph concepts and algorithms is followed by topics in network flow, partitioning, spectral analysis of graphs, graph isomorphism, and intractability. (Formerly Computer Engineering 277.)"}, "CSE 210A": {"full_name": "CSE 210A Programming Languages", "credits": 5, "description": "Covers current issues in programming languages. Language topics include object oriented, concurrent, functional, and logic programming, and other programmable applications such as symbolic manipulators and simulation. (Formerly Computer Science 203.)"}, "CSE 210B": {"full_name": "CSE 210B Advanced Programming Languages", "credits": 5, "description": "Covers issues in the design, implementation, analysis, and specification of programming languages.  Topics include formal semantics (including operational, axiomatic, and denotational semantics), advanced type systems, program analysis (including abstract interpretation and model checking), specification, and verification. (Formerly Computer Science 253.)"}, "CSE 211": {"full_name": "CSE 211 Compiler Design", "credits": 5, "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, machine code generation. Students may not receive credit for this course and CSE 110B. Taught in conjunction with CSE 110B. (Formerly Computer Science 204.)"}, "CSE 212A": {"full_name": "CSE 212A Software Engineering", "credits": 5, "description": "Introduction to the general principles of software engineering. Covers current and classical topics from both practical and theoretical viewpoints. Topics include software evolution, project management, software inspections, design methods, requirements analysis and specification, software testing, maintenance, software implementation, human interfaces, and software engineering experimentation. (Formerly CMPS 276.)"}, "CSE 212B": {"full_name": "CSE 212B Software Reuse and Component-Based Software Engineering", "credits": 5, "description": "Detailed study of interlocking business, organizational, and technical issues in large-scale software reuse and component-based software engineering. Topics include architecture, design for reuse, domain engineering, model-driven development, domain-specific kits, components, frameworks, software agents, generators, problem-oriented languages, library design, reuse tools, patterns, and aspects. Assumes prior exposure to software engineering topics. (Formerly Computer Science 279.)"}, "CSE 214": {"full_name": "CSE 214 Principles of Database Systems", "credits": 5, "description": "Advanced course on principles of database systems. Main topics include overview of the relational data model and relational query languages; recursive queries, datalog, and fixed-points; query processing and optimization; database design, dependencies, normal forms, and the chase procedure. Additional topics may include information integration, complex objects, semistructured data, and XML. (Formerly Computer Science 277.)"}, "CSE 215": {"full_name": "CSE 215 Design and Implementation of Database Systems", "credits": 5, "description": "Advanced course in implementation techniques for database systems. For students who wish to do research in databases or to learn more about large-scale data processing. Topics include: indexing of complex data; techniques for high-volume concurrency control; query processing and optimization; database recovery; parallel database system architectures; database systems for streaming data; approximate query answering. Additional topics may include: self-managing database systems; advanced query optimization techniques; and query processing techniques for semi-structured data. (Formerly Computer Science 278.)"}, "CSE 216": {"full_name": "CSE 216 Formal Methods", "credits": 5, "description": "Mathematical techniques for analyzing systems to prove rigorous guarantees about their behavior. Fundamental algorithms for and advanced topics in modeling, specification, verification, correct-by-construction synthesis, and testing. Applications to hardware/software design, cybersecurity, robotics, machine learning. Course includes a final project."}, "CSE 220": {"full_name": "CSE 220 Computer Architecture", "credits": 5, "description": "Provides a thorough and fundamental treatment of the art of computer architecture. Topics include concepts of von Neumann architectures, methods of evaluating CPU performance, instruction-set design and examples, compiler issues, instruction pipelining, superscalar processors, methods for reduction of branch penalty, memory hierarchies, I/O systems, floating-point arithmetic, and current issues in parallel processing. (Formerly CMPE 202.)"}, "CSE 221": {"full_name": "CSE 221 Advanced Microprocessor Design", "credits": 5, "description": "Introduction to latest advances in computer architecture. Focuses on processor core design. Topics include simultaneous multithreading, thread level speculation, trace caches, novel out-of-order mechanisms, and energy-efficient processor core designs. Final project is modification/enhancement of an out-of-order processor on an FPGA development system. (Formerly Computer Engineering 221.)"}, "CSE 221L": {"full_name": "CSE 221L Advanced Microprocessor Design Laboratory", "credits": 3, "description": "Laboratory sequence illustrating topics covered in course 221. (Formerly Computer Engineering 221L.)"}, "CSE 222A": {"full_name": "CSE 222A VLSI Digital System Design", "credits": 5, "description": "Advanced Very Large Scale Integrated (VLSI) custom integrated circuits. Topics include: semiconductors; field-effect transistors (FETs); circuits; and  interconnect simulation, along with advanced material on manufacturability, variability, short-channel devices, and non-volatile memories. Students cannot receive credit for this course and CSE 122. (Formerly Computer Engineering 222.)"}, "CSE 222B": {"full_name": "CSE 222B VLSI System-on-a-Chip Design", "credits": 5, "description": "Design methodologies for Application Specific Integrated Circuits (ASICs). Topics include: behavioral specification; logic synthesis; standard-cell libraries; advanced timing analysis; and physical design automation tools. Familiarizes students with real-world tools during the design of a small system-on-a-chip project. Students are encouraged to fabricate and test their chips in an independent study. (Formerly Computer Engineering 223.)"}, "CSE 225": {"full_name": "CSE 225 Introduction to ASIC Systems Design", "credits": 5, "description": "Introduces reconfigurable computing systems with emphasis on field-programmable devices. Topics include: architectures of field-programmable devices; novel reconfigurable systems; and hardware algorithms. Students are billed a materials fee. (Formerly Computer Engineering 225.)"}, "CSE 226": {"full_name": "CSE 226 Advanced Parallel Processing", "credits": 5, "description": "Introduction to programming advanced parallel computer architecture. Topics may include: SIMD massively parallel processor arrays; streaming parallel coprocessors, such as graphics cards used for general-purpose processing (GPGPU); or other hybrid MIMD/SIMD architectures. Course has programming lab component, a project, and student presentation on related topics. (Formerly Computer Engineering 220.)"}, "CSE 229": {"full_name": "CSE 229 Field-Programmable Gate Arrays Computer-Assisted Design", "credits": 5, "description": "Design methods for Field-Programmable Gate Arrays (FGPAs), including algorithms for technology mapping, routability estimation, placement, and routing. The relationship between FPGA architectures and their computer-aided design tools. Course project involves the modification and analysis of an FPGA tool. (Formerly Computer Engineering 229.)"}, "CSE 231": {"full_name": "CSE 231 Advanced Operating Systems", "credits": 5, "description": "A detailed study of the issues involved in operating systems design and implementation. Readings cover current research topics and systems of historical significance. Topics include (but are not restricted to) process and memory management, protection, security, synchronization, performance evaluation, file systems, distributed systems. (Formerly Computer Science 221.)"}, "CSE 232": {"full_name": "CSE 232 Distributed Systems", "credits": 5, "description": "Overview of research topics in distributed computer systems. Topics may include communication paradigms, process management, naming, synchronization and coordination, consistency and replication, fault tolerance, and security. Examples include distributed operating systems, distributed file and object systems, distributed document systems, and peer-to-peer systems. (Formerly Computer Science 232.)"}, "CSE 233": {"full_name": "CSE 233 Advanced Computer Security", "credits": 5, "description": "Overview of research topics in computer and network security. Topics may include cryptographic operations, security properties and policies, authentication and access control, attacks on computer systems and defenses against them, security in programming languages, and network protocols for security. (Formerly CMPS 223.)"}, "CSE 234": {"full_name": "CSE 234 Understanding Cryptography", "credits": 5, "description": "Cryptography has become ubiquitous, from light bulbs to atomic weapons. This course provides both a comprehensive introduction to applied cryptography and an additional focus on the human issues caused by bad implementations, bad processes, and broken algorithms. Knowledge of C Programming, Linux, and Virtual machines is required. (Formerly Computer Engineering 236 and Computer Science 236.)"}, "CSE 237": {"full_name": "CSE 237 Storage Systems", "credits": 5, "description": "Topics include storage devices, storage architectures, local file systems, high-performance file systems, and next-generation storage devices and architectures; covers issues of performance, reliability, scalability, robustness, and security. (Formerly Computer Science 229.)"}, "CSE 240": {"full_name": "CSE 240 Artificial Intelligence", "credits": 5, "description": "Prepares students for doing research in artificial intelligence. Major topics covered are search and heuristics, knowledge representation, planning, deduction and inference, reinforcement learning, associative pattern retrieval, and adaptive search. Discussion includes current research issues in AI problem-solving methods. Individualized projects. (Formerly Computer Science 240.)"}, "CSE 241": {"full_name": "CSE 241 Knowledge Engineering", "credits": 5, "description": "Introduction to the acquisition, representation, and application of knowledge in expert systems. Topics include production systems, backward and forward chaining, dependency-directed backtracking, reasoning with uncertainty, certainty factors, fuzzy systems, knowledge representation (rules, frames, and semantic nets), inference engines, and metaknowledge. Discussion includes current research issues in adaptive expert systems. Involves one major project. Undergraduates may enroll in this course if they have completed CSE 140. (Formerly Computer Science 241.)"}, "CSE 242": {"full_name": "CSE 242 Machine Learning", "credits": 5, "description": "Introduction to machine learning algorithms. Covers learning models from fields of statistical decision theory and pattern recognition, artificial intelligence, and theoretical computer science. Topics include classification learning and the Probably Approximately Correct (PAC) learning framework, density estimation and Bayesian learning, EM, regression, and online learning. Provides an introduction to standard learning methods such as neural networks, decision trees, boosting, nearest neighbor, and support vector machines. Requirements include one major experimental learning project or theoretical paper. Students may not receive credit for both this course and CSE 142. (Formerly CMPS 242.)"}, "CSE 243": {"full_name": "CSE 243 Data Mining", "credits": 5, "description": "Covers the principles, algorithms, and applications of data mining, including mining sequential data, structured data, stream data, text data, spatiotemporal data, biomedical data, and other forms of complex data. Formerly TIM 245.)"}, "CSE 244A": {"full_name": "CSE 244A Foundations of Deep Learning", "credits": 5, "description": "Provides foundations of deep learning algorithms and principles. Topics include neural networks, deep learning principles, deep learning architectures such as convolutional neural networks and recurrent neural networks, autoencoders, generative adversarial networks, and reinforcement learning. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)"}, "CSE 244B": {"full_name": "CSE 244B Machine Learning for Natural Language Processing", "credits": 5, "description": "Introduction to machine learning models and algorithms for Natural Language Processing. Covers deep learning approaches and traditional machine learning models. Topics include an introduction to standard neural network learning methods such as feed-forward neural networks, recurrent neural networks, convolutional neural networks, and encoder-decoder models with applications to natural language processing problems such as utterance classification and sequence tagging. Requirements include a midterm, final, programming assignments, and a project. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)"}, "CSE 245": {"full_name": "CSE 245 Computational Models of Discourse and Dialogue", "credits": 5, "description": "Focuses on classic and current theories and research topics in the computational modeling of discourse and dialogue, with applications to human-computer dialogue interactions; dialogue interaction in computer games and interactive story systems; and processing of human-to-human conversational and dialogue-like language such as e-mails. Topics vary depending on the current research of the instructor(s) and the interests of the students. Students read theoretical and technical papers from journals and conference proceedings and present class lectures. A research project is required."}, "CSE 246": {"full_name": "CSE 246 Responsible Data Science", "credits": 5, "description": "Graduate course covering basics of data science literacy and data science ethics. Topics include algorithmic discrimination, fairness, interpretability, privacy, and reproducibility. Key statistical topics such as generalization, causality, curse of dimensionality, and sampling bias are covered."}, "CSE 247": {"full_name": "CSE 247 AI: Problem Solving and Intelligent Search", "credits": 5, "description": "Surveys topics in contemporary deductive artificial intelligence (AI). Coursework involves weekly readings and a project. (Formerly Computer Science 247.)"}, "CSE 248": {"full_name": "CSE 248 Foundations of Data Science", "credits": 5, "description": "Examines the mathematical and algorithmic foundations of data science including high dimensional data, probabilistic inequalities, dimensionality reduction, correlation detection, streaming algorithms, and clustering. (Formerly Computer Science 218.)"}, "CSE 249": {"full_name": "CSE 249 Large-Scale Web Analytics and Machine Learning", "credits": 5, "description": "Provides a systematic methodology and corresponding set of methods and analytical tools in stochastic models; reinforcement learning; stochastic (neuro-)dynamic programming; Bayesian graphical models; inference; and social networks used for web analytics and machine learning to achieve business intelligence (BI) and support research and applications in computer science, computer engineering, and electrical engineering, applied mathematics and statistics, business, management, and economics. Includes exposure to Hadoop for large-scale computation. Students should have solid background in probability equivalent to statistics, stochastic, methods, calculus, (and preferably) stochastic processes and optimization, or mathematical maturity and exposure to business intelligence and algorithms. (Formerly TIM 251.)"}, "CSE 250A": {"full_name": "CSE 250A Computer Networks", "credits": 5, "description": "Issues resulting from organizing communication among autonomous computers. Includes network models and switching techniques; medium access control protocols and local area networks; error control and retransmission strategies; routing algorithms and protocols; congestion control mechanisms and end-to-end protocols; application-level protocols; and application of concepts to wireless and wireline networks, with emphasis on the Internet. (Formerly Computer Engineering 252A.)"}, "CSE 250B": {"full_name": "CSE 250B Principles of Computer Communication", "credits": 5, "description": "Focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 152. (Formerly CMPE 252B.)"}, "CSE 250C": {"full_name": "CSE 250C High Speed Computer Networks", "credits": 5, "description": "Fiber-optic technology; fiber-optic link design; network protocol concepts; coding and error control; high-speed local area and metropolitan area networks; gigabit networks; error and congestion control; photonic networks; research topics. (Formerly Computer Engineering 254.)"}, "CSE 253": {"full_name": "CSE 253 Network Security", "credits": 5, "description": "Fundamental mechanisms for network security and their application in widely deployed protocols. In-depth treatment of security mechanism at the data-link, network, and transport layers for both wired and wireless networks. Covers mechanisms for privacy and integrity, and methods for intrusion detection. (Formerly CMPE 253.)"}, "CSE 257": {"full_name": "CSE 257 Wireless and Mobile Networks", "credits": 5, "description": "An interdisciplinary course on wireless communication and mobile computing. Covers the physical aspects of wireless communication but emphasizes higher protocol layers. Topics include cellular networks, packet radio and ad hoc networks, wireless transport protocols, security, and application-level issues. (Formerly Computer Engineering 257.)"}, "CSE 259": {"full_name": "CSE 259 Sensor Networks", "credits": 5, "description": "Focuses on the networking aspects of sensor networks: protocols at the various layers and how they answer the specific requirements posed by these networks (e.g., data driven, energy efficient, etc.) and their applications (monitoring, tracking, etc.). Explores how physical layer and hardware issues may influence protocol design. (Formerly Computer Engineering 259.)"}, "CSE 260": {"full_name": "CSE 260 Computer Graphics", "credits": 5, "description": "Introduces current research and techniques of modeling, 2D/3D transformation, matrix composition, shading algorithms, and rendering to obtain computer-generated imagery. Programming assignments and major project required. Students cannot receive credit for both this course and CSE 160. (Formerly Computer Science 260.)"}, "CSE 261": {"full_name": "CSE 261 Advanced Visualization", "credits": 5, "description": "Covers advanced topics in visualization, e.g., tensor-field visualization, uncertainty visualization, information visualization. Topics vary with differing offerings of the course. Course includes lectures, exam, research paper reading/presentation, and projects. Final project is expected to be at a sufficiently advanced level for submission to a conference. Students work individually or in pairs. (Formerly Computer Science 261.)"}, "CSE 262": {"full_name": "CSE 262 Computer Animation", "credits": 5, "description": "An in-depth treatment of computer animation, including its origins in conventional animation, 2-D animation, inbetweening, motion control, morphing, graphical motion editors, animation languages, motion blur, simulation of articulated body motion, real-time animation, and special-purpose animation hardware. (Formerly Computer Science 262.)"}, "CSE 263": {"full_name": "CSE 263 Data Driven Discovery and Visualization", "credits": 5, "description": "Explores high-quality interdisciplinary research using socio-economic data and software available on the Internet, and data curation, computation, and visualization to strengthen scientific inquiry to bear on large-scale societal problems. Applications include inequality, poverty, water, energy, environment, health, education, and democracy. Enrollment restricted to graduate students. Enrollment by instructor consent. (Formerly Computer Science 263.)"}, "CSE 264": {"full_name": "CSE 264 Computer Vision", "credits": 5, "description": "Introduces general concepts in computer vision, with an emphasis on geometric 3D reconstruction. Topics include radiometry, photometry, projective geometry, geometric camera model, epipolar geometry, stereo depth reconstruction, corner and edge features, point descriptors and matching, and optical flow.  (Formerly Computer Engineering 264.)"}, "CSE 265": {"full_name": "CSE 265 Human-Computer Interaction", "credits": 5, "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Individual research project. Interdisciplinary course for art, social science and engineering graduate students. Students cannot receive credit for this course and CSE 165."}, "CSE 270A": {"full_name": "CSE 270A Management of Technology I", "credits": 5, "description": "Addresses technological, strategic, marketing, financial methods, and analytical tools for management of technology in an integrated manner that enables the cost-effective and rapid development of profitable and high quality technologies. Includes case studies and a comprehensive project. (Formerly TIM 205.)"}, "CSE 270B": {"full_name": "CSE 270B Management of Technology II", "credits": 5, "description": "High technology enterprises must understand and operate effectively within their technology-business value chains in order to maximize profitability. Course develops and applies methods and tools for the design, optimization, selection, and management of these value chain networks. (Formerly TIM 225.)"}, "CSE 271": {"full_name": "CSE 271 E-Business Technology and Strategy", "credits": 5, "description": "Surveys structure of modern information technology, the relation of that structure to structure of the industry that creates it, and the economic forces that drive the players in the industry. Building on these technological and economic concepts, studies how firms can craft a technology and business strategy to create and capture value in the information technology product and/or services sectors. (Formerly TIM 211.)"}, "CSE 272": {"full_name": "CSE 272 Information Retrieval", "credits": 5, "description": "Course covers major topics of information retrieval, including statistical characteristics of text, several important retrieval models, text clustering, text classification, text filtering, web analysis, information extraction, peer to peer research, distributed search, personalized search, and other related topics. (Formerly TIM 260.)"}, "CSE 276": {"full_name": "CSE 276 Optimization Theory and Applications", "credits": 5, "description": "A first graduate course in optimization with an emphasis on problems arising in management and engineering applications. Objectives are to become experts in problem formulation, comfortable with software for solving these problems, and familiar with analytical methods behind these solver technologies. (Formerly TIM 206.)"}, "CSE 277": {"full_name": "CSE 277 Random Process Models in Engineering", "credits": 5, "description": "A first graduate course in stochastic process modeling and analysis with an emphasis on applications in technology management, information systems design, and engineering. (Formerly TIM 207.)"}, "CSE 279": {"full_name": "CSE 279 Data Mining and Business Analytics in Knowledge Services", "credits": 5, "description": "Provides students with systematic methodology and analytical tools in data and text mining and business analytics. Also provides an integrated perspective and examines use of these methods in the field of knowledge services, such as online marketing, sponsored search, health care, financial services, recommender systems, etc. Includes training in the basic elements of stochastic optimization and other algorithmic approaches, such as stochastic dynamic programming, statistics, constrained optimization, and machine learning with exposure to software tools. These methods enable firms to achieve rapid, effective, and profitable optimization of knowledge-services management. (Formerly TIM 209.)"}, "CSE 280A": {"full_name": "CSE 280A Seminar in Computer Science and Engineering", "credits": 2, "description": "Weekly seminar covering topics of current research in computer science. Enrollment by permission of instructor. (Formerly CMPS 280A, Seminar in Computer Science Research.)"}, "CSE 280D": {"full_name": "CSE 280D Seminar in Database Systems", "credits": 2, "description": "Covers advanced research topics from the recent literature in database systems and related fields. Involves presentations from UCSC students and faculty, and guest talks from researchers in industry and other academic institutions.  Enrollment by permission of instructor. (Formerly 280D.)"}, "CSE 280F": {"full_name": "CSE 280F Seminar on Software Engineering", "credits": 2, "description": "Weekly seminar covering topics of current research in software engineering. (Formerly CMPS 280G.)"}, "CSE 280G": {"full_name": "CSE 280G VLSI/CAD Seminar", "credits": 2, "description": "Weekly seminar on advanced topics in VLSI and computer-aided design (CAD). Students present and discuss modern issues in semiconductor design, fabrication, and CAD. Frequent guest speakers present pertinent results from industry and academia. (Formerly Computer Engineering 280G.)"}, "CSE 280H": {"full_name": "CSE 280H Seminar in Human Computation Systems", "credits": 2, "description": "Covers advanced topics and current research in the general area of human computation. Material is drawn from several disciplines that involve or deal with human computation, including computer vision, human-computer interaction, databases, and machine learning. The course comprises presentations from faculty, enrolled students, and external visitors. (Formerly CMPS 280H.)"}, "CSE 280I": {"full_name": "CSE 280I Seminar on Information Retrieval and Knowledge Management", "credits": 2, "description": "Seminar series discussing advanced topics in information retrieval and knowledge management. Current research and literature are presented during each meeting. (Formerly 280I.)"}, "CSE 280J": {"full_name": "CSE 280J Seminar on Computer Graphics", "credits": 2, "description": "Weekly seminar covering topics of current research in computer graphics. Enrollment restricted to graduate students and by permission of instructor. (Formerly CMPS 280J.)"}, "CSE 280K": {"full_name": "CSE 280K Sales and Marketing for Technologists and Engineers", "credits": 2, "description": "Perspective on the theory, plus examples, and tools useful to technologists and engineers for successfully guiding and supporting sales and marketing endeavors and, thereby, ensuring funding, staffing, product appeal, positive customer relationships, and marketplace success. (Formerly TIM 280M.)"}, "CSE 280L": {"full_name": "CSE 280L Seminar on Logic in Computer Science", "credits": 2, "description": "Covers advanced research topics from the recent literature in the uses of logic in computer science with particular emphasis on the applications of logic to the representation and the management of data. Involves presentations from UCSC students and faculty, and guest talks from researchers in other academic institutions or industrial research labs. Enrollment is by permission of the instructor and is restricted to graduate students. (Formerly CMPS 280L.)"}, "CSE 280M": {"full_name": "CSE 280M Seminar on Machine Learning", "credits": 2, "description": "Weekly seminar covering topics of current interest in machine learning. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly CMPS 280M.)"}, "CSE 280N": {"full_name": "CSE 280N Seminar on Networks", "credits": 2, "description": "Weekly seminar series covering topics of current research in networks and networked systems. Current research work and literature in these areas are discussed. Prerequisite(s): permission of instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280N.)"}, "CSE 280O": {"full_name": "CSE 280O Seminar in Applied Programming Languages", "credits": 2, "description": "Covers current research in language-based approaches to security, distributed systems, databases, and formal verification. Students read and present papers from academic journals and conferences."}, "CSE 280P": {"full_name": "CSE 280P Seminar on Parallel Processing", "credits": 2, "description": "Weekly seminar series covering topics of current research in parallel systems, architectures, and algorithms. Current research work and literature in these areas are discussed. (Formerly Computer Engineering 280P.)"}, "CSE 280S": {"full_name": "CSE 280S Seminar on Computer Systems", "credits": 2, "description": "Weekly seminar series covering topics of current research in computer systems. Enrollment by permission of instructor. (Formerly CMPS 280S AND CMPE 280S.)"}, "CSE 280T": {"full_name": "CSE 280T Seminar on New Technologies", "credits": 2, "description": "Weekly seminar series in which distinguished speakers from industry, universities, and government discuss current developments in networking and computer technology. The emphasis is on open research questions that may lead to collaborative work with faculty and graduate students. (Formerly Computer Engineering 280T.)"}, "CSE 280V": {"full_name": "CSE 280V Seminar on Computer Vision", "credits": 2, "description": "Weekly graduate-level seminar series discussing advanced topics in computer vision and image analysis. Current research and literature presented during each meeting. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280V.)"}, "CSE 280X": {"full_name": "CSE 280X Seminar in Distributed Systems", "credits": 2, "description": "Covers advanced research topics from the recent literature in distributed systems and related fields. Involves presentations from UCSC students and faculty. Enrollment is restricted to graduate students and by permission of the instructor."}, "CSE 280Z": {"full_name": "CSE 280Z Seminar in Natural Language Processing and Dialogue", "credits": 2, "description": "Covers advanced topics and current research in natural language processing. Focuses on student presentations and seminar participation. Enrollment is restricted to graduate students. Enrollment is by permission of the instructor. (Formerly CMPS 280Z.)"}, "CSE 285": {"full_name": "CSE 285 Technical Writing for Engineering Graduates", "credits": 5, "description": "Writing skills development for graduate engineers. Students produce a major writing project with many subtasks. Exercises includes fellowship application; mathematical and algorithmic description; use of tables and graphs; experiment description; and producing technical web sites, presentations, and posters. Enrollment is restricted to graduate students in biomolecular engineering, computer science and engineering, computer science, and electrical and computer engineering and by permission of the instructor. (Formerly CMPE 285.)"}, "CSE 290A": {"full_name": "CSE 290A Topics in Algorithms and Complexity Theory: Probabilistic Algorithms and Average Case Analysis", "credits": 5, "description": "Graduate seminar in algorithms and complexity theory on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings and present class lectures. Guest lectures may supplement the student presentations. A research project and/or paper may be required. (Formerly Computer Science 290A.)"}, "CSE 290C": {"full_name": "CSE 290C Advanced Topics in Machine Learning", "credits": 5, "description": "In-depth study of current research topics in machine learning. Topics vary from year to year but include multi-class learning with boosting and SUM algorithms, belief nets, independent component analysis, MCMC sampling, and advanced clustering methods. Students read and present research papers; theoretical homework in addition to a research project. (Formerly Computer Science 290C.)"}, "CSE 290D": {"full_name": "CSE 290D Neural Computation", "credits": 5, "description": "An introduction to the design and analysis of neural network algorithms. Concentrates on large artificial neural networks and their applications in pattern recognition, signal processing, and forecasting and control. Topics include Hopfield and Boltzmann machines, perceptions, multilayer feed forward nets, and multilayer recurrent networks. (Formerly Computer Science 290D.)"}, "CSE 290E": {"full_name": "CSE 290E Object-Oriented Programming Methodology", "credits": 5, "description": "Object-oriented programming methodology is the application of abstract-data types and polymorphism to coding solution. Topics geared to beginning thesis research in this field. (Formerly Computer Science 290E.)"}, "CSE 290F": {"full_name": "CSE 290F Applications of Combinatorics", "credits": 5, "description": "Combinatorial mathematics, including summation methods, working with binomial coefficients, combinatorial sequences (Fibonacci, Stirling, Eulerian, Harmonic, Bernoulli numbers), generating functions and their uses, Bernoulli processes, and other topics in discrete probability. Oriented toward problem solving, applications mainly to computer science, but also physics. (Formerly Computer Science 290F.)"}, "CSE 290G": {"full_name": "CSE 290G Topics in Software Engineering", "credits": 5, "description": "Research seminar on current topics in software engineering. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings. Synthesis and understanding of materials is demonstrated by a required research project. (Formerly Computer Science 290G.)"}, "CSE 290H": {"full_name": "CSE 290H Topics in Database Systems", "credits": 5, "description": "Focuses on current research topics in database systems. Different offerings cover different topics depending on current research of instructor(s) and the interests of students. Students read technical papers from journals and conference proceedings and present class lectures. A research project is required. (Formerly Computer Science 290H.)"}, "CSE 290J": {"full_name": "CSE 290J Advanced Topics in Computer Graphics and Visual Computing", "credits": 5, "description": "A graduate seminar in computer graphics on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on interests of students. Primary areas of interest are likely to be scientific visualization, modeling, rendering, scattered data techniques, wavelets, and color and vision models. Students read technical papers and present class lectures. Guest lecturers supplement the student presentations. A research project is required. (Formerly Computer Science 290B.)"}, "CSE 290K": {"full_name": "CSE 290K Advanced Topics in Natural Language Processing", "credits": 5, "description": "Teaches participants about current methods and directions in active areas of Natural Language Processing research and applications. Students perform independent research and hone skills with state-of-the-art NLP tools and techniques."}, "CSE 290L": {"full_name": "CSE 290L Topics in Crowdsourcing and Collaboration", "credits": 5, "description": "Explores the foundations of crowdsourcing and computer-mediated collaboration. Covers the algorithmic and statistical foundations of crowdsourcing, introducing and analyzing algorithms, and experimenting with concrete systems. Also, provides an introduction to computational systems for mediating user interaction and collaboration. (Formerly Computer Science 290L.)"}, "CSE 290M": {"full_name": "CSE 290M Topics in Parallel Computation", "credits": 5, "description": "Investigates selected topics in applied parallel computation. Topics may include numerical methods, artificial intelligence and machine learning algorithms, graphics and image processing, systolic algorithms, and the interplay between hardware and algorithms. Students are encouraged to investigate and discuss the parallelization of their own research. (Formerly Computer Engineering 290M.)"}, "CSE 290N": {"full_name": "CSE 290N Topics in Computer Performance", "credits": 5, "description": "Selected topics of current interest in the area of computer system performance. Subjects may include aspects of large systems, performability, computer networks, storage subsystems, and nontraditional approaches and are subject to periodic revision. (Formerly Computer Engineering 290N.)"}, "CSE 290O": {"full_name": "CSE 290O Algorithmic Foundations of Convex Optimization", "credits": 5, "description": "Focuses on some of the foundational aspects of convex and its relationship to modern machine learning. Discusses positive results--how can you solve convex optimization problems--and negative ones with statements like This family of problems is too hard to be solved in reasonable time. Course is divided into three parts, each exploring a different aspect of convex optimization: 1) algorithmic frameworks; 2) Oracle complexities; 3) the power of randomness. Through this course students are exposed to general concepts of convex geometry, learning theory, and rigorous proofs. (formerly CMPS 290O.)"}, "CSE 290P": {"full_name": "CSE 290P Data Privacy Via Machine Learning, and Back", "credits": 5, "description": "Helps students achieve both expository knowledge and expertise in the field of data privacy. Focuses on fundamental techniques used in designing privacy-preserving, machine-learning systems in both academia and in the industry. Students are expected to read and understand recent research papers in the topic. (Formerly Computer Science 290P.)"}, "CSE 290Q": {"full_name": "CSE 290Q Topics in Programming Languages", "credits": 5, "description": "Current research topics on computer programming languages. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290Q.)"}, "CSE 290S": {"full_name": "CSE 290S Advanced Topics in Computer Systems", "credits": 5, "description": "Focuses on current research topics in computer systems. Topics vary from year to year depending on the current research of the instructor(s) and the interests of the students. Students read technical papers from current journals and conference proceedings, and present class lectures. A research project is required. (Formerly Computer Science 290S.)"}, "CSE 290T": {"full_name": "CSE 290T Topics in Computing for Society", "credits": 5, "description": "Current research topics on computer technology that is intentionally targeted to benefiting society. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290T.)"}, "CSE 290X": {"full_name": "CSE 290X Cryptography and Computer Security", "credits": 5, "description": "Research seminar on encryption and related technologies. Topics include theory of codes, random sequences and generators, public key cryptosystems, private key cyphers, key exchange protocols, quantum computing and cryptography. Major project required. Prerequisite: interview with instructor. (Formerly Computer Science 290X.)"}, "CSE 293": {"full_name": "CSE 293 Advanced Topics in Computer Science & Engineering", "credits": 5, "description": "A graduate seminar on a research topic in computer engineering which varies according to instructor. Possible topics include, but are not limited to, communication networks, data compression, special-purpose architectures, computer arithmetic, software reliability and reusability, systolic arrays. (Formerly Computer Engineering 293.)"}, "CSE 296": {"full_name": "CSE 296 Masters Project", "credits": 2, "description": "Independent completion of a masters project under faculty supervision. Students submit petition to sponsoring agency."}, "CSE 297A": {"full_name": "CSE 297A Individual Study or Research", "credits": 5, "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 297B": {"full_name": "CSE 297B Individual Study or Research", "credits": 10, "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 297C": {"full_name": "CSE 297C Individual Study or Research", "credits": 15, "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 297F": {"full_name": "CSE 297F Independent Study or Research", "credits": 2, "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course toward degree requirements."}, "CSE 299A": {"full_name": "CSE 299A Thesis Research", "credits": 5, "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 299B": {"full_name": "CSE 299B Thesis Research", "credits": 10, "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 299C": {"full_name": "CSE 299C Thesis Research", "credits": 15, "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency."}, "CSE 299F": {"full_name": "CSE 299F Thesis Research", "credits": 2, "description": "Independent study or research under faculty supervision. Enrollment is restricted to graduate students. Recommended for part-time students. Students submit petition to sponsoring agency."}}